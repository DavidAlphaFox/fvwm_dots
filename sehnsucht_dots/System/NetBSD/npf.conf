#Associate a dynamic list of IPs , both IPv4 and IPv6, to default WLAN interface[1]
   $wifi_if = ifaddrs(athn0)

# Introduce a container lists for blacklisted IPs[2]
   table <blacklist> type hash file "/etc/npf_blacklist"       
   table <suspicious> type tree dynamic

#Introduce 2 variables to list opened TCP and UDP ports[3]
   $services_tcp = { http, https, smtp, smtps, domain, 587, 6000 }
   $services_udp = { domain, ntp, 6000, 51413 }

 # Variable $LAN represents range of IPs for the local network 
  $LAN = { 192.168.1.0/24 }
  $localhost= 127.0.0.1

# Load ICMP application-level gateway[4]
   alg "icmp"

# Introduce a pseudo-device for logging events[5]
  procedure "log" {
        log: npflog0
  }

# Introduce a set of 'normalization' options[6]
  procedure "norm" {
        normalize: "random-id", "min-ttl" 512, "max-mss" 1432,  "no-df"
  }


  group default {
        #Pass everything on loop interface
              pass final on lo0 all

        #Block blacklisted IPs
              block in final from <blacklist>
              
         #Block IPs marked as 'suspicious'
              block in final from <suspicious>     
        
        #Allow all outgoing traffic
              pass stateful out final all
             
        #Only allow selected ICMP types
              pass in final proto icmp icmp-type timxceed all
 	      pass in final proto icmp icmp-type unreach all
 	      pass in final proto icmp icmp-type echoreply all
 	      pass in final proto icmp icmp-type sourcequench all
 	      pass in final proto icmp icmp-type paramprob all
        
        # Allow SSH/(T)FTP/MPD/TigerVNC \ 
        # connections on LAN and log them [8]
             pass stateful in final proto tcp from \
                       $LAN to $wifi_if port ftp apply "log"
             pass stateful in final proto tcp from \
                       $LAN to $wifi_if port ssh apply "log"
             pass stateful in final proto udp from \
                        $LAN to $wifi_if port tftp apply "log"
             pass stateful in final proto tcp from \
                        $LAN to $wifi_if port 6600 apply "log"           
             pass stateful in final proto tcp from \
                        $LAN to $wifi_if port 5901  apply "log"
                        
        # Allow DHCP requests 
	      pass out final proto udp from any port \
	                bootpc to any port bootps
	      pass in final proto udp from any port \
	                 bootps to any port bootpc
	      pass in final proto udp from any port \
	                 bootps to 255.255.255.0 port bootpc

        #Allow incoming TCP/UDP packets \
        # on selected ports applyin "norm" procedure
              pass stateful in final proto tcp to $wifi_if \
                         port $services_tcp apply "norm"
              pass stateful in final proto udp to $wifi_if \
                         port $services_udp apply  "norm"
         
        # Allow Traceroute 
              pass stateful in final proto udp to $wifi_if \
                        port 33434-33600  apply"norm"   
              
        
        # Reject everything else [9]
               block return-rst in final proto tcp all apply "log"
               block return-icmp in final proto udp all apply "log"
               block return in final all apply "log"
  }
        


